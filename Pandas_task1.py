# -*- coding: utf-8 -*-
"""session-16-tasks.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NjZaBfQeIynhtP5-6t7ymjPPUkVt4ytU
"""



"""###`Q-1:` Write a program to create an empty series."""

import pandas as pd
import numpy as np

s = pd.Series
s

"""###`Q-2:` Write a Pandas program to add, subtract, multiple and divide two Pandas Series."""

s1 = pd.Series([100,94,97,100,82,76], index=['Telugu','Hindi','English','Maths','Science','Social'])
s2 = pd.Series([64,56,83,100,95,89], index=['Telugu','Hindi','English','Maths','Science','Social'])

#sum
s1+s2

#subtract
s1-s2

#product

s1*s2

#Divide

s1/s2

"""###`Q-3` Write a Pandas program to compare the elements of the two Pandas Series.
Sample Series: [2, 4, 6, 8, 10], [1, 3, 5, 7, 10]


"""

a = pd.Series([2, 4, 6, 8, 10])
b = pd.Series([1, 3, 5, 7, 10])

a>b

"""###`Q-5.`Write a function to change the data type of given a column or a Series. Function takes series and data type as input, returns the converted series.
```
series = pd.Series([1,2,'Python', 2.0, True, 100])
change to float type data
```
Note: Read about pd.to_numeric()
"""

def dtype(series, type):

  result = pd.to_numeric(series, errors='coerce').astype(type)

  return result


series = pd.Series([1,2,'Python', 2.0, True, 100])
dtype(series, float)

"""Download data - https://drive.google.com/file/d/1LRhXwbEodeWXtzPhJCX0X9Lf_BECzvqb/view?usp=share_link
All Batsman runs series in IPL 2008 to 2022.

Below questions are based on this data.

###`Q-6` Find top 10 most run getter from the series.
"""

data = pd.read_csv('/content/batsman_runs_series.csv')
data.sort_values(by='batsman_run', ascending=False).head(10)

"""###`Q-7` No of players having runs above 3000"""

data[data['batsman_run']>3000].shape[0]

"""###`Q-8` No of players having runs above mean value?"""

data[data['batsman_run']>data['batsman_run'].mean()].shape[0]

"""Download data - https://drive.google.com/file/d/1QZuZ5bypUInfVvarHACLAi8tXXHvb8xd/view?usp=share_link

file name - items.csv

###`Q-9`
    i. Read `items.csv` making `item_name` as index.
    ii. Show no of nan values
    ii. Item price is given in $, so convert it to rupees without currency symbol.
    iii. Make data type of newly made series as float.
    iv. Fill nan with mean of the series


How csv file looks

```
item_name	item_price
Chips and Fresh Tomato Salsa	$2.39
Izze	$3.39
Nantucket Nectar	$3.39
Chips and Tomatillo-Green Chili Salsa	$2.39
Chicken Bowl	$16.98

```
"""

d = pd.read_csv('/content/items.csv', index_col=['item_name']).squeeze('columns')
d

d.isna().sum()

def rupees(x):
  try:
    y = x[1:]
  except:
    y = x

  return float(y)*85.03

d.apply(rupees)

new = d.apply(rupees)

new.isna().sum()

new = new.fillna(new.mean())

new.isna().sum()

"""###`Q-10`:
    i. Find mean price
    ii. Find 30th and 6th percentile value
    iii. Plot Histogram on price with bin size 50
    iv. No of items price lies between [1000 to 2000]


"""

new.mean()

np.percentile(new, 30)

np.percentile(new, 6)

new.plot.hist(bins=50)

new.between(1000, 2000).sum()

